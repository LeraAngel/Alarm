{"ast":null,"code":"import * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { clockTypes } from \"./timeUtils\";\nexport default function AnimatedClockSwitcher(_ref) {\n  var focused = _ref.focused,\n      hours = _ref.hours,\n      minutes = _ref.minutes;\n  var collapsed = focused === clockTypes.hours;\n  var animatedCollapsed = React.useRef(new Animated.Value(collapsed ? 1 : 0));\n  React.useEffect(function () {\n    Animated.timing(animatedCollapsed.current, {\n      toValue: collapsed ? 1 : 0,\n      duration: 250,\n      useNativeDriver: true\n    }).start();\n  }, [collapsed]);\n  return React.createElement(View, {\n    style: StyleSheet.absoluteFill\n  }, React.createElement(Animated.View, {\n    pointerEvents: collapsed ? 'auto' : 'none',\n    style: [StyleSheet.absoluteFill, {\n      opacity: animatedCollapsed.current,\n      transform: [{\n        scale: animatedCollapsed.current.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0.95, 1]\n        })\n      }]\n    }]\n  }, hours), React.createElement(Animated.View, {\n    pointerEvents: collapsed ? 'none' : 'auto',\n    style: [StyleSheet.absoluteFill, {\n      opacity: animatedCollapsed.current.interpolate({\n        inputRange: [0, 1],\n        outputRange: [1, 0]\n      }),\n      transform: [{\n        scale: animatedCollapsed.current.interpolate({\n          inputRange: [0, 1],\n          outputRange: [1, 0.95]\n        })\n      }]\n    }]\n  }, minutes));\n}","map":{"version":3,"sources":["AnimatedClockSwitcher.tsx"],"names":["minutes","collapsed","focused","clockTypes","animatedCollapsed","React","Animated","toValue","duration","useNativeDriver","StyleSheet","absoluteFill","opacity","transform","scale","inputRange","outputRange"],"mappings":"AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;;;;AAEA,SAAA,UAAA;AAEA,eAAe,SAAA,qBAAA,CAAA,IAAA,EAQZ;EAR2C,IAAA,OAAA,GAQ3C,IAR2C,CAAA,OAAA;EAAA,IAAA,KAAA,GAQ3C,IAR2C,CAAA,KAAA;EAAA,IAG5CA,OAH4C,GAQ3C,IAR2C,CAG5CA,OAH4C;EAS5C,IAAMC,SAAS,GAAGC,OAAO,KAAKC,UAAU,CAAxC,KAAA;EACA,IAAMC,iBAAiB,GAAGC,KAAK,CAALA,MAAAA,CACxB,IAAIC,QAAQ,CAAZ,KAAA,CAAmBL,SAAS,GAAA,CAAA,GAD9B,CACE,CADwBI,CAA1B;EAGAA,KAAK,CAALA,SAAAA,CAAgB,YAAM;IACpBC,QAAQ,CAARA,MAAAA,CAAgBF,iBAAiB,CAAjCE,OAAAA,EAA2C;MACzCC,OAAO,EAAEN,SAAS,GAAA,CAAA,GADuB,CAAA;MAEzCO,QAAQ,EAFiC,GAAA;MAGzCC,eAAe,EAAE;IAHwB,CAA3CH,EAAAA,KAAAA;EADFD,CAAAA,EAMG,CANHA,SAMG,CANHA;EAQA,OACE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;IAAM,KAAK,EAAEK,UAAU,CAACC;EAAxB,CAAA,EACE,KAAA,CAAA,aAAA,CAAC,QAAD,CAAA,IAAA,EAAA;IACE,aAAa,EAAEV,SAAS,GAAA,MAAA,GAD1B,MAAA;IAEE,KAAK,EAAE,CACLS,UAAU,CADL,YAAA,EAEL;MACEE,OAAO,EAAER,iBAAiB,CAD5B,OAAA;MAEES,SAAS,EAAE,CACT;QACEC,KAAK,EAAE,iBAAiB,CAAjB,OAAA,CAAA,WAAA,CAAsC;UAC3CC,UAAU,EAAE,CAAA,CAAA,EAD+B,CAC/B,CAD+B;UAE3CC,WAAW,EAAE,CAAA,IAAA,EAAA,CAAA;QAF8B,CAAtC;MADT,CADS;IAFb,CAFK;EAFT,CAAA,EADF,KACE,CADF,EAoBE,KAAA,CAAA,aAAA,CAAC,QAAD,CAAA,IAAA,EAAA;IACE,aAAa,EAAEf,SAAS,GAAA,MAAA,GAD1B,MAAA;IAEE,KAAK,EAAE,CACLS,UAAU,CADL,YAAA,EAEL;MACEE,OAAO,EAAE,iBAAiB,CAAjB,OAAA,CAAA,WAAA,CAAsC;QAC7CG,UAAU,EAAE,CAAA,CAAA,EADiC,CACjC,CADiC;QAE7CC,WAAW,EAAE,CAAA,CAAA,EAAA,CAAA;MAFgC,CAAtC,CADX;MAKEH,SAAS,EAAE,CACT;QACEC,KAAK,EAAE,iBAAiB,CAAjB,OAAA,CAAA,WAAA,CAAsC;UAC3CC,UAAU,EAAE,CAAA,CAAA,EAD+B,CAC/B,CAD+B;UAE3CC,WAAW,EAAE,CAAA,CAAA,EAAA,IAAA;QAF8B,CAAtC;MADT,CADS;IALb,CAFK;EAFT,CAAA,EArBJ,OAqBI,CApBF,CADF;AA6CD","sourcesContent":["import * as React from 'react'\nimport { Animated, StyleSheet, View } from 'react-native'\nimport { clockTypes, PossibleClockTypes } from './timeUtils'\n\nexport default function AnimatedClockSwitcher({\n  focused,\n  hours,\n  minutes,\n}: {\n  focused: PossibleClockTypes\n  hours: any\n  minutes: any\n}) {\n  const collapsed = focused === clockTypes.hours\n  const animatedCollapsed = React.useRef<Animated.Value>(\n    new Animated.Value(collapsed ? 1 : 0)\n  )\n  React.useEffect(() => {\n    Animated.timing(animatedCollapsed.current, {\n      toValue: collapsed ? 1 : 0,\n      duration: 250,\n      useNativeDriver: true,\n    }).start()\n  }, [collapsed])\n\n  return (\n    <View style={StyleSheet.absoluteFill}>\n      <Animated.View\n        pointerEvents={collapsed ? 'auto' : 'none'}\n        style={[\n          StyleSheet.absoluteFill,\n          {\n            opacity: animatedCollapsed.current,\n            transform: [\n              {\n                scale: animatedCollapsed.current.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [0.95, 1],\n                }),\n              },\n            ],\n          },\n        ]}\n      >\n        {hours}\n      </Animated.View>\n      <Animated.View\n        pointerEvents={collapsed ? 'none' : 'auto'}\n        style={[\n          StyleSheet.absoluteFill,\n          {\n            opacity: animatedCollapsed.current.interpolate({\n              inputRange: [0, 1],\n              outputRange: [1, 0],\n            }),\n            transform: [\n              {\n                scale: animatedCollapsed.current.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [1, 0.95],\n                }),\n              },\n            ],\n          },\n        ]}\n      >\n        {minutes}\n      </Animated.View>\n    </View>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}