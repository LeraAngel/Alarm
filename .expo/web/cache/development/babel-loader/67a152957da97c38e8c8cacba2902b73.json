{"ast":null,"code":"import * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { IconButton, useTheme } from 'react-native-paper';\nimport DayNames, { dayNamesHeight } from \"./DayNames\";\nimport { getTranslation } from \"../translations/utils\";\nvar buttonContainerHeight = 56;\nvar buttonContainerMarginTop = 4;\nvar buttonContainerMarginBottom = 8;\nexport function getCalendarHeaderHeight(scrollMode) {\n  if (scrollMode === 'horizontal') {\n    return buttonContainerHeight + buttonContainerMarginTop + buttonContainerMarginBottom + dayNamesHeight;\n  }\n\n  return dayNamesHeight;\n}\n\nfunction CalendarHeader(_ref) {\n  var scrollMode = _ref.scrollMode,\n      onPrev = _ref.onPrev,\n      onNext = _ref.onNext,\n      disableWeekDays = _ref.disableWeekDays,\n      locale = _ref.locale;\n  var theme = useTheme();\n  var isHorizontal = scrollMode === 'horizontal';\n  return React.createElement(View, {\n    style: styles.datePickerHeader,\n    pointerEvents: 'box-none'\n  }, isHorizontal ? React.createElement(View, {\n    style: styles.buttonContainer,\n    pointerEvents: 'box-none'\n  }, React.createElement(View, {\n    style: styles.spacer,\n    pointerEvents: 'box-none'\n  }), React.createElement(View, {\n    style: [styles.buttonWrapper, {\n      backgroundColor: theme.colors.surface\n    }]\n  }, React.createElement(IconButton, {\n    icon: \"chevron-left\",\n    accessibilityLabel: getTranslation(locale, 'previous'),\n    onPress: onPrev\n  })), React.createElement(View, {\n    style: [styles.buttonWrapper, {\n      backgroundColor: theme.colors.surface\n    }]\n  }, React.createElement(IconButton, {\n    icon: \"chevron-right\",\n    accessibilityLabel: getTranslation(locale, 'next'),\n    onPress: onNext\n  }))) : null, React.createElement(DayNames, {\n    disableWeekDays: disableWeekDays,\n    locale: locale\n  }));\n}\n\nvar styles = StyleSheet.create({\n  datePickerHeader: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n    left: 0,\n    zIndex: 10\n  },\n  buttonContainer: {\n    height: buttonContainerHeight,\n    marginTop: buttonContainerMarginTop,\n    marginBottom: buttonContainerMarginBottom,\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  buttonWrapper: {},\n  spacer: {\n    flex: 1\n  }\n});\nexport default React.memo(CalendarHeader);","map":{"version":3,"sources":["CalendarHeader.tsx"],"names":["buttonContainerHeight","buttonContainerMarginTop","buttonContainerMarginBottom","scrollMode","locale","theme","useTheme","isHorizontal","styles","backgroundColor","surface","getTranslation","onPrev","onNext","datePickerHeader","position","top","right","left","zIndex","buttonContainer","height","marginTop","marginBottom","flexDirection","alignItems","buttonWrapper","spacer","flex","React"],"mappings":"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","sourcesContent":["import * as React from 'react'\nimport { StyleSheet, View } from 'react-native'\nimport { IconButton, useTheme } from 'react-native-paper'\nimport DayNames, { dayNamesHeight } from './DayNames'\nimport type { DisableWeekDaysType } from './dateUtils'\nimport { getTranslation } from '../translations/utils'\n\nconst buttonContainerHeight = 56\nconst buttonContainerMarginTop = 4\nconst buttonContainerMarginBottom = 8\n\nexport function getCalendarHeaderHeight(scrollMode: 'horizontal' | 'vertical') {\n  if (scrollMode === 'horizontal') {\n    return (\n      buttonContainerHeight +\n      buttonContainerMarginTop +\n      buttonContainerMarginBottom +\n      dayNamesHeight\n    )\n  }\n  return dayNamesHeight\n}\n\nfunction CalendarHeader({\n  scrollMode,\n  onPrev,\n  onNext,\n  disableWeekDays,\n  locale,\n}: {\n  locale: undefined | string\n  scrollMode: 'horizontal' | 'vertical'\n  onPrev: () => any\n  onNext: () => any\n  disableWeekDays?: DisableWeekDaysType\n}) {\n  const theme = useTheme()\n  const isHorizontal = scrollMode === 'horizontal'\n  return (\n    <View style={styles.datePickerHeader} pointerEvents={'box-none'}>\n      {isHorizontal ? (\n        <View style={styles.buttonContainer} pointerEvents={'box-none'}>\n          <View style={styles.spacer} pointerEvents={'box-none'} />\n          <View\n            style={[\n              styles.buttonWrapper,\n              { backgroundColor: theme.colors.surface },\n            ]}\n          >\n            <IconButton\n              icon=\"chevron-left\"\n              accessibilityLabel={getTranslation(locale, 'previous')}\n              onPress={onPrev}\n            />\n          </View>\n\n          <View\n            style={[\n              styles.buttonWrapper,\n              { backgroundColor: theme.colors.surface },\n            ]}\n          >\n            <IconButton\n              icon=\"chevron-right\"\n              accessibilityLabel={getTranslation(locale, 'next')}\n              onPress={onNext}\n            />\n          </View>\n        </View>\n      ) : null}\n      <DayNames disableWeekDays={disableWeekDays} locale={locale} />\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  datePickerHeader: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n    left: 0,\n    zIndex: 10,\n  },\n  buttonContainer: {\n    height: buttonContainerHeight,\n    marginTop: buttonContainerMarginTop,\n    marginBottom: buttonContainerMarginBottom,\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  buttonWrapper: {},\n  spacer: { flex: 1 },\n})\n\nexport default React.memo(CalendarHeader)\n"]},"metadata":{},"sourceType":"module"}