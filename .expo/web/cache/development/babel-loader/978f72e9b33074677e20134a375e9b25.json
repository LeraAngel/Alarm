{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport DatePickerInput from \"./DatePickerInput\";\n\nfunction CalendarEdit(_ref) {\n  var mode = _ref.mode,\n      state = _ref.state,\n      _ref$label = _ref.label,\n      label = _ref$label === void 0 ? '' : _ref$label,\n      _ref$startLabel = _ref.startLabel,\n      startLabel = _ref$startLabel === void 0 ? 'Start' : _ref$startLabel,\n      _ref$endLabel = _ref.endLabel,\n      endLabel = _ref$endLabel === void 0 ? 'End' : _ref$endLabel,\n      collapsed = _ref.collapsed,\n      _onChange = _ref.onChange,\n      validRange = _ref.validRange,\n      locale = _ref.locale;\n  var dateInput = React.useRef(null);\n  var startInput = React.useRef(null);\n  var endInput = React.useRef(null);\n  React.useEffect(function () {\n    if (collapsed) {\n      Keyboard.dismiss();\n    }\n\n    var inputsToFocus = [dateInput.current, startInput.current].filter(function (n) {\n      return n;\n    });\n    var inputsToBlur = [dateInput.current, startInput.current, endInput.current].filter(function (n) {\n      return n;\n    });\n\n    if (collapsed) {\n      inputsToBlur.forEach(function (ip) {\n        return ip.blur();\n      });\n    } else {\n      inputsToFocus.forEach(function (ip) {\n        return ip.focus();\n      });\n    }\n  }, [mode, startInput, endInput, dateInput, collapsed]);\n  var onSubmitStartInput = React.useCallback(function () {\n    if (endInput.current) {\n      endInput.current.focus();\n    }\n  }, [endInput]);\n  var onSubmitEndInput = React.useCallback(function () {}, []);\n  var onSubmitInput = React.useCallback(function () {}, []);\n  return React.createElement(View, {\n    style: styles.root\n  }, mode === 'single' ? React.createElement(DatePickerInput, {\n    inputMode: \"start\",\n    ref: dateInput,\n    label: label,\n    value: state.date,\n    onChange: function onChange(date) {\n      return _onChange(_objectSpread(_objectSpread({}, state), {}, {\n        date: date\n      }));\n    },\n    onSubmitEditing: onSubmitInput,\n    validRange: validRange,\n    locale: locale,\n    withModal: false,\n    autoComplete: 'off'\n  }) : null, mode === 'range' ? React.createElement(View, {\n    style: styles.inner\n  }, React.createElement(DatePickerInput, {\n    inputMode: \"start\",\n    ref: startInput,\n    label: startLabel,\n    value: state.startDate,\n    onChange: function onChange(startDate) {\n      return _onChange(_objectSpread(_objectSpread({}, state), {}, {\n        startDate: startDate\n      }));\n    },\n    returnKeyType: 'next',\n    onSubmitEditing: onSubmitStartInput,\n    validRange: validRange,\n    locale: locale,\n    withModal: false,\n    autoComplete: 'off'\n  }), React.createElement(View, {\n    style: styles.separator\n  }), React.createElement(DatePickerInput, {\n    inputMode: \"end\",\n    ref: endInput,\n    label: endLabel,\n    value: state.endDate,\n    onChange: function onChange(endDate) {\n      return _onChange(_objectSpread(_objectSpread({}, state), {}, {\n        endDate: endDate\n      }));\n    },\n    onSubmitEditing: onSubmitEndInput,\n    validRange: validRange,\n    locale: locale,\n    withModal: false,\n    autoComplete: \"off\"\n  })) : null);\n}\n\nvar styles = StyleSheet.create({\n  root: {\n    padding: 12\n  },\n  inner: {\n    flexDirection: 'row'\n  },\n  inputContainer: {\n    flex: 1\n  },\n  input: {\n    flex: 1\n  },\n  separator: {\n    width: 12\n  }\n});\nexport default React.memo(CalendarEdit);","map":{"version":3,"sources":["CalendarEdit.tsx"],"names":["label","startLabel","endLabel","locale","dateInput","React","startInput","endInput","Keyboard","inputsToFocus","n","inputsToBlur","ip","onSubmitStartInput","onSubmitEndInput","onSubmitInput","styles","root","state","date","onChange","inner","startDate","separator","endDate","padding","flexDirection","inputContainer","flex","input","width"],"mappings":"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","sourcesContent":["import * as React from 'react'\nimport {\n  View,\n  StyleSheet,\n  TextInput as TextInputNative,\n  Keyboard,\n} from 'react-native'\n\nimport type { ModeType, ValidRangeType } from './Calendar'\nimport type { LocalState } from './DatePickerModalContent'\n\nimport DatePickerInput from './DatePickerInput'\n\nfunction CalendarEdit({\n  mode,\n  state,\n  label = '',\n  startLabel = 'Start',\n  endLabel = 'End',\n  collapsed,\n  onChange,\n  validRange,\n  locale,\n}: {\n  mode: ModeType\n  label?: string\n  startLabel?: string\n  endLabel?: string\n  state: LocalState\n  collapsed: boolean\n  onChange: (s: LocalState) => any\n  validRange: ValidRangeType | undefined\n  locale: string\n}) {\n  const dateInput = React.useRef<TextInputNative | null>(null)\n  const startInput = React.useRef<TextInputNative | null>(null)\n  const endInput = React.useRef<TextInputNative | null>(null)\n\n  // when switching views focus, or un-focus text input\n  React.useEffect(() => {\n    // hide open keyboard\n    if (collapsed) {\n      Keyboard.dismiss()\n    }\n\n    const inputsToFocus = [dateInput.current, startInput.current].filter(\n      (n) => n\n    ) as TextInputNative[]\n\n    const inputsToBlur = [\n      dateInput.current,\n      startInput.current,\n      endInput.current,\n    ].filter((n) => n) as TextInputNative[]\n\n    if (collapsed) {\n      inputsToBlur.forEach((ip) => ip.blur())\n    } else {\n      inputsToFocus.forEach((ip) => ip.focus())\n    }\n  }, [mode, startInput, endInput, dateInput, collapsed])\n\n  const onSubmitStartInput = React.useCallback(() => {\n    if (endInput.current) {\n      endInput.current.focus()\n    }\n  }, [endInput])\n\n  const onSubmitEndInput = React.useCallback(() => {\n    // TODO: close modal and persist range\n  }, [])\n\n  const onSubmitInput = React.useCallback(() => {\n    // TODO: close modal and persist range\n  }, [])\n\n  return (\n    <View style={styles.root}>\n      {mode === 'single' ? (\n        <DatePickerInput\n          inputMode=\"start\"\n          ref={dateInput}\n          label={label}\n          value={state.date}\n          onChange={(date) => onChange({ ...state, date })}\n          onSubmitEditing={onSubmitInput}\n          validRange={validRange}\n          locale={locale}\n          withModal={false}\n          autoComplete={'off'}\n        />\n      ) : null}\n      {mode === 'range' ? (\n        <View style={styles.inner}>\n          <DatePickerInput\n            inputMode=\"start\"\n            ref={startInput}\n            label={startLabel}\n            value={state.startDate}\n            onChange={(startDate) => onChange({ ...state, startDate })}\n            returnKeyType={'next'}\n            onSubmitEditing={onSubmitStartInput}\n            validRange={validRange}\n            locale={locale}\n            withModal={false}\n            autoComplete={'off'}\n          />\n          <View style={styles.separator} />\n          <DatePickerInput\n            inputMode=\"end\"\n            ref={endInput}\n            label={endLabel}\n            value={state.endDate}\n            onChange={(endDate) => onChange({ ...state, endDate })}\n            onSubmitEditing={onSubmitEndInput}\n            validRange={validRange}\n            locale={locale}\n            withModal={false}\n            autoComplete=\"off\"\n          />\n        </View>\n      ) : null}\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  root: { padding: 12 },\n  inner: { flexDirection: 'row' },\n  inputContainer: { flex: 1 },\n  input: { flex: 1 },\n  separator: { width: 12 },\n})\n\nexport default React.memo(CalendarEdit)\n"]},"metadata":{},"sourceType":"module"}