{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { IconButton, Text } from 'react-native-paper';\nimport { useHeaderTextColor } from \"../utils\";\nimport Color from 'color';\nimport { getTranslation } from \"../translations/utils\";\n\nfunction getLabel(locale, mode, configuredLabel) {\n  if (configuredLabel) {\n    return configuredLabel;\n  }\n\n  if (mode === 'range') {\n    return getTranslation(locale, 'selectRange');\n  }\n\n  if (mode === 'multiple') {\n    return getTranslation(locale, 'selectMultiple');\n  }\n\n  if (mode === 'single') {\n    return getTranslation(locale, 'selectSingle');\n  }\n\n  return '...?';\n}\n\nexport default function DatePickerModalContentHeader(props) {\n  var onToggle = props.onToggle,\n      collapsed = props.collapsed,\n      mode = props.mode,\n      moreLabel = props.moreLabel,\n      uppercase = props.uppercase;\n  var label = getLabel(props.locale, props.mode, props.label);\n  var color = useHeaderTextColor();\n  var allowEditing = mode !== 'multiple';\n  return React.createElement(View, {\n    style: [styles.header]\n  }, React.createElement(View, null, React.createElement(Text, {\n    style: [styles.label, {\n      color: color\n    }]\n  }, uppercase ? label.toUpperCase() : label), React.createElement(View, {\n    style: styles.headerContentContainer\n  }, mode === 'range' ? React.createElement(HeaderContentRange, _extends({}, props, {\n    color: color\n  })) : null, mode === 'single' ? React.createElement(HeaderContentSingle, _extends({}, props, {\n    color: color\n  })) : null, mode === 'multiple' ? React.createElement(HeaderContentMulti, _extends({}, props, {\n    color: color,\n    moreLabel: moreLabel\n  })) : null)), React.createElement(View, {\n    style: styles.fill\n  }), allowEditing ? React.createElement(IconButton, {\n    icon: collapsed ? 'pencil' : 'calendar',\n    accessibilityLabel: collapsed ? getTranslation(props.locale, 'typeInDate') : getTranslation(props.locale, 'pickDateFromCalendar'),\n    color: color,\n    onPress: onToggle\n  }) : null);\n}\nexport function HeaderContentSingle(_ref) {\n  var state = _ref.state,\n      _ref$emptyLabel = _ref.emptyLabel,\n      emptyLabel = _ref$emptyLabel === void 0 ? ' ' : _ref$emptyLabel,\n      color = _ref.color,\n      locale = _ref.locale;\n  var lighterColor = Color(color).fade(0.5).rgb().toString();\n  var dateColor = state.date ? color : lighterColor;\n  var formatter = React.useMemo(function () {\n    return new Intl.DateTimeFormat(locale, {\n      month: 'short',\n      day: 'numeric'\n    });\n  }, [locale]);\n  return React.createElement(Text, {\n    style: [styles.singleHeaderText, {\n      color: dateColor\n    }]\n  }, state.date ? formatter.format(state.date) : emptyLabel);\n}\nexport function HeaderContentMulti(_ref2) {\n  var _state$dates;\n\n  var state = _ref2.state,\n      _ref2$emptyLabel = _ref2.emptyLabel,\n      emptyLabel = _ref2$emptyLabel === void 0 ? ' ' : _ref2$emptyLabel,\n      _ref2$moreLabel = _ref2.moreLabel,\n      moreLabel = _ref2$moreLabel === void 0 ? 'more' : _ref2$moreLabel,\n      color = _ref2.color,\n      locale = _ref2.locale;\n  var dateCount = ((_state$dates = state.dates) === null || _state$dates === void 0 ? void 0 : _state$dates.length) || 0;\n  var lighterColor = Color(color).fade(0.5).rgb().toString();\n  var dateColor = dateCount ? color : lighterColor;\n  var formatter = React.useMemo(function () {\n    return new Intl.DateTimeFormat(locale, {\n      month: 'short',\n      day: 'numeric'\n    });\n  }, [locale]);\n  var label = emptyLabel;\n\n  if (dateCount) {\n    if (dateCount <= 2) {\n      label = state.dates.map(function (date) {\n        return formatter.format(date);\n      }).join(', ');\n    } else {\n      label = formatter.format(state.dates[0]) + (\" (+ \" + (dateCount - 1) + \" \" + moreLabel + \")\");\n    }\n  }\n\n  return React.createElement(Text, {\n    style: [styles.singleHeaderText, {\n      color: dateColor\n    }]\n  }, label);\n}\nexport function HeaderContentRange(_ref3) {\n  var locale = _ref3.locale,\n      state = _ref3.state,\n      _ref3$headerSeparator = _ref3.headerSeparator,\n      headerSeparator = _ref3$headerSeparator === void 0 ? '-' : _ref3$headerSeparator,\n      _ref3$startLabel = _ref3.startLabel,\n      startLabel = _ref3$startLabel === void 0 ? 'Start' : _ref3$startLabel,\n      _ref3$endLabel = _ref3.endLabel,\n      endLabel = _ref3$endLabel === void 0 ? 'End' : _ref3$endLabel,\n      color = _ref3.color;\n  var formatter = React.useMemo(function () {\n    return new Intl.DateTimeFormat(locale, {\n      month: 'short',\n      day: 'numeric'\n    });\n  }, [locale]);\n  var lighterColor = Color(color).fade(0.5).rgb().toString();\n  var startColor = state.startDate ? color : lighterColor;\n  var endColor = state.endDate ? color : lighterColor;\n  return React.createElement(React.Fragment, null, React.createElement(Text, {\n    style: [styles.rangeHeaderText, {\n      color: startColor\n    }]\n  }, state.startDate ? formatter.format(state.startDate) : startLabel), React.createElement(Text, {\n    style: [styles.headerSeparator, {\n      color: color\n    }]\n  }, headerSeparator), React.createElement(Text, {\n    style: [styles.rangeHeaderText, {\n      color: endColor\n    }]\n  }, state.endDate ? formatter.format(state.endDate) : endLabel));\n}\nvar styles = StyleSheet.create({\n  fill: {\n    flex: 1\n  },\n  animated: {\n    paddingBottom: 0,\n    elevation: 4\n  },\n  safeContent: {\n    paddingBottom: 0\n  },\n  header: {\n    height: 75,\n    alignItems: 'center',\n    flexDirection: 'row',\n    paddingLeft: 24,\n    paddingRight: 12\n  },\n  headerContentContainer: {\n    marginTop: 5,\n    flexDirection: 'row'\n  },\n  label: {\n    color: '#fff',\n    letterSpacing: 1,\n    fontSize: 13\n  },\n  singleHeaderText: {\n    color: '#fff',\n    fontSize: 25\n  },\n  rangeHeaderText: {\n    color: '#fff',\n    fontSize: 25\n  },\n  excludeInRangeHeaderText: {\n    fontSize: 25\n  },\n  excludeInRangeHeaderTextSmall: {\n    fontSize: 14,\n    marginTop: -3,\n    marginLeft: 3\n  },\n  headerSeparator: {\n    color: 'rgba(255,255,255,1)',\n    fontSize: 25,\n    paddingLeft: 6,\n    paddingRight: 6\n  },\n  appbarHeader: {\n    elevation: 0\n  },\n  column: {\n    flexDirection: 'column'\n  },\n  row: {\n    flexDirection: 'row'\n  }\n});","map":{"version":3,"sources":["DatePickerModalContentHeader.tsx"],"names":["mode","getTranslation","uppercase","label","getLabel","props","color","useHeaderTextColor","allowEditing","styles","headerContentContainer","moreLabel","fill","collapsed","onToggle","emptyLabel","locale","lighterColor","Color","dateColor","state","formatter","Intl","month","day","dateCount","date","headerSeparator","startLabel","endLabel","startColor","endColor","flex","animated","paddingBottom","elevation","safeContent","header","height","alignItems","flexDirection","paddingLeft","paddingRight","marginTop","letterSpacing","fontSize","singleHeaderText","rangeHeaderText","excludeInRangeHeaderText","excludeInRangeHeaderTextSmall","marginLeft","appbarHeader","column","row"],"mappings":"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","sourcesContent":["import * as React from 'react'\nimport { View, StyleSheet } from 'react-native'\nimport { IconButton, Text } from 'react-native-paper'\nimport type { ModeType } from './Calendar'\nimport type { LocalState } from './DatePickerModalContent'\nimport { useHeaderTextColor } from '../utils'\nimport Color from 'color'\nimport { getTranslation } from '../translations/utils'\n\nexport interface HeaderPickProps {\n  moreLabel?: string\n  label?: string\n  emptyLabel?: string\n  saveLabel?: string\n  uppercase?: boolean\n  headerSeparator?: string\n  startLabel?: string\n  endLabel?: string\n}\n\nexport interface HeaderContentProps extends HeaderPickProps {\n  state: LocalState\n  mode: ModeType\n  collapsed: boolean\n  onToggle: () => any\n  locale: string | undefined\n}\n\nfunction getLabel(\n  locale: string | undefined,\n  mode: ModeType,\n  configuredLabel?: string\n) {\n  if (configuredLabel) {\n    return configuredLabel\n  }\n  if (mode === 'range') {\n    return getTranslation(locale, 'selectRange')\n  }\n  if (mode === 'multiple') {\n    return getTranslation(locale, 'selectMultiple')\n  }\n  if (mode === 'single') {\n    return getTranslation(locale, 'selectSingle')\n  }\n  return '...?'\n}\n\nexport default function DatePickerModalContentHeader(\n  props: HeaderContentProps\n) {\n  const { onToggle, collapsed, mode, moreLabel, uppercase } = props\n\n  const label = getLabel(props.locale, props.mode, props.label)\n\n  const color = useHeaderTextColor()\n  const allowEditing = mode !== 'multiple'\n  return (\n    <View style={[styles.header]}>\n      <View>\n        <Text style={[styles.label, { color }]}>\n          {uppercase ? label.toUpperCase() : label}\n        </Text>\n        <View style={styles.headerContentContainer}>\n          {mode === 'range' ? (\n            <HeaderContentRange {...props} color={color} />\n          ) : null}\n          {mode === 'single' ? (\n            <HeaderContentSingle {...props} color={color} />\n          ) : null}\n          {mode === 'multiple' ? (\n            <HeaderContentMulti\n              {...props}\n              color={color}\n              moreLabel={moreLabel}\n            />\n          ) : null}\n        </View>\n      </View>\n      <View style={styles.fill} />\n      {allowEditing ? (\n        <IconButton\n          icon={collapsed ? 'pencil' : 'calendar'}\n          accessibilityLabel={\n            collapsed\n              ? getTranslation(props.locale, 'typeInDate')\n              : getTranslation(props.locale, 'pickDateFromCalendar')\n          }\n          color={color}\n          onPress={onToggle}\n        />\n      ) : null}\n    </View>\n  )\n}\n\nexport function HeaderContentSingle({\n  state,\n  emptyLabel = ' ',\n  color,\n  locale,\n}: HeaderContentProps & { color: string }) {\n  const lighterColor = Color(color).fade(0.5).rgb().toString()\n  const dateColor = state.date ? color : lighterColor\n\n  const formatter = React.useMemo(() => {\n    return new Intl.DateTimeFormat(locale, {\n      month: 'short',\n      day: 'numeric',\n    })\n  }, [locale])\n\n  return (\n    <Text style={[styles.singleHeaderText, { color: dateColor }]}>\n      {state.date ? formatter.format(state.date) : emptyLabel}\n    </Text>\n  )\n}\n\nexport function HeaderContentMulti({\n  state,\n  emptyLabel = ' ',\n  moreLabel = 'more',\n  color,\n  locale,\n}: HeaderContentProps & { color: string; moreLabel: string | undefined }) {\n  const dateCount = state.dates?.length || 0\n  const lighterColor = Color(color).fade(0.5).rgb().toString()\n  const dateColor = dateCount ? color : lighterColor\n\n  const formatter = React.useMemo(() => {\n    return new Intl.DateTimeFormat(locale, {\n      month: 'short',\n      day: 'numeric',\n    })\n  }, [locale])\n\n  let label = emptyLabel\n  if (dateCount) {\n    if (dateCount <= 2) {\n      label = state.dates!.map((date) => formatter.format(date)).join(', ')\n    } else {\n      label =\n        formatter.format(state.dates![0]) + ` (+ ${dateCount - 1} ${moreLabel})`\n    }\n  }\n\n  return (\n    <Text style={[styles.singleHeaderText, { color: dateColor }]}>{label}</Text>\n  )\n}\n\nexport function HeaderContentRange({\n  locale,\n  state,\n  headerSeparator = '-',\n  startLabel = 'Start',\n  endLabel = 'End',\n  color,\n}: HeaderContentProps & { color: string }) {\n  const formatter = React.useMemo(() => {\n    return new Intl.DateTimeFormat(locale, {\n      month: 'short',\n      day: 'numeric',\n    })\n  }, [locale])\n\n  const lighterColor = Color(color).fade(0.5).rgb().toString()\n  const startColor = state.startDate ? color : lighterColor\n  const endColor = state.endDate ? color : lighterColor\n\n  return (\n    <>\n      <Text style={[styles.rangeHeaderText, { color: startColor }]}>\n        {state.startDate ? formatter.format(state.startDate) : startLabel}\n      </Text>\n      <Text style={[styles.headerSeparator, { color }]}>{headerSeparator}</Text>\n      <Text style={[styles.rangeHeaderText, { color: endColor }]}>\n        {state.endDate ? formatter.format(state.endDate) : endLabel}\n      </Text>\n    </>\n  )\n}\n\nconst styles = StyleSheet.create({\n  fill: {\n    flex: 1,\n  },\n  animated: {\n    paddingBottom: 0,\n    elevation: 4,\n  },\n  safeContent: {\n    paddingBottom: 0,\n  },\n  header: {\n    height: 75,\n    alignItems: 'center',\n    flexDirection: 'row',\n    paddingLeft: 24,\n    paddingRight: 12,\n  },\n  headerContentContainer: { marginTop: 5, flexDirection: 'row' },\n  label: { color: '#fff', letterSpacing: 1, fontSize: 13 },\n  singleHeaderText: { color: '#fff', fontSize: 25 },\n  rangeHeaderText: { color: '#fff', fontSize: 25 },\n  excludeInRangeHeaderText: { fontSize: 25 },\n  excludeInRangeHeaderTextSmall: {\n    fontSize: 14,\n    marginTop: -3,\n    marginLeft: 3,\n  },\n\n  headerSeparator: {\n    color: 'rgba(255,255,255,1)',\n    fontSize: 25,\n    paddingLeft: 6,\n    paddingRight: 6,\n  },\n  appbarHeader: {\n    elevation: 0,\n  },\n  column: { flexDirection: 'column' },\n  row: { flexDirection: 'row' },\n})\n"]},"metadata":{},"sourceType":"module"}