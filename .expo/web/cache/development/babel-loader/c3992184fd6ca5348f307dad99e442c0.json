{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport * as React from 'react';\nimport Calendar from \"./Calendar\";\nimport AnimatedCrossView from \"./AnimatedCrossView\";\nimport DatePickerModalHeader from \"./DatePickerModalHeader\";\nimport DatePickerModalContentHeader from \"./DatePickerModalContentHeader\";\nimport CalendarEdit from \"./CalendarEdit\";\nimport DatePickerModalHeaderBackground from \"./DatePickerModalHeaderBackground\";\nexport function DatePickerModalContent(props) {\n  var _props$uppercase, _props$uppercase2;\n\n  var mode = props.mode,\n      onChange = props.onChange,\n      onConfirm = props.onConfirm,\n      onDismiss = props.onDismiss,\n      disableSafeTop = props.disableSafeTop,\n      disableWeekDays = props.disableWeekDays,\n      locale = props.locale,\n      validRange = props.validRange,\n      dateMode = props.dateMode;\n  var anyProps = props;\n\n  var _React$useState = React.useState({\n    date: anyProps.date,\n    startDate: anyProps.startDate,\n    endDate: anyProps.endDate,\n    dates: anyProps.dates\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      state = _React$useState2[0],\n      setState = _React$useState2[1];\n\n  React.useEffect(function () {\n    setState({\n      date: anyProps.date,\n      startDate: anyProps.startDate,\n      endDate: anyProps.endDate,\n      dates: anyProps.dates\n    });\n  }, [anyProps.date, anyProps.startDate, anyProps.endDate, anyProps.dates]);\n\n  var _React$useState3 = React.useState(true),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      collapsed = _React$useState4[0],\n      setCollapsed = _React$useState4[1];\n\n  var onInnerChange = React.useCallback(function (params) {\n    onChange && onChange(params);\n    setState(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), params);\n    });\n  }, [onChange, setState]);\n  var onInnerConfirm = React.useCallback(function () {\n    if (mode === 'single') {\n      ;\n      onConfirm({\n        date: state.date\n      });\n    } else if (mode === 'range') {\n      ;\n      onConfirm({\n        startDate: state.startDate,\n        endDate: state.endDate\n      });\n    } else if (mode === 'multiple') {\n      ;\n      onConfirm({\n        dates: state.dates || []\n      });\n    }\n  }, [state, mode, onConfirm]);\n  var onToggleCollapse = React.useCallback(function () {\n    setCollapsed(function (prev) {\n      return !prev;\n    });\n  }, [setCollapsed]);\n  return React.createElement(React.Fragment, null, React.createElement(DatePickerModalHeaderBackground, null, React.createElement(DatePickerModalHeader, {\n    locale: locale,\n    onSave: onInnerConfirm,\n    onDismiss: onDismiss,\n    saveLabel: props.saveLabel,\n    uppercase: (_props$uppercase = props.uppercase) !== null && _props$uppercase !== void 0 ? _props$uppercase : true,\n    disableSafeTop: disableSafeTop\n  }), React.createElement(DatePickerModalContentHeader, {\n    state: state,\n    mode: mode,\n    collapsed: collapsed,\n    onToggle: onToggleCollapse,\n    headerSeparator: props.headerSeparator,\n    emptyLabel: props.emptyLabel,\n    label: props.label,\n    moreLabel: props.moreLabel,\n    startLabel: props.startLabel,\n    endLabel: props.endLabel,\n    uppercase: (_props$uppercase2 = props.uppercase) !== null && _props$uppercase2 !== void 0 ? _props$uppercase2 : true,\n    locale: locale\n  })), React.createElement(AnimatedCrossView, {\n    collapsed: collapsed,\n    calendar: React.createElement(Calendar, {\n      locale: locale,\n      mode: mode,\n      startDate: state.startDate,\n      endDate: state.endDate,\n      date: state.date,\n      onChange: onInnerChange,\n      disableWeekDays: disableWeekDays,\n      dates: state.dates,\n      validRange: validRange,\n      dateMode: dateMode\n    }),\n    calendarEdit: React.createElement(CalendarEdit, {\n      mode: mode,\n      state: state,\n      label: props.label,\n      startLabel: props.startLabel,\n      endLabel: props.endLabel,\n      collapsed: collapsed,\n      onChange: onInnerChange,\n      validRange: validRange,\n      locale: locale\n    })\n  }));\n}\nexport default React.memo(DatePickerModalContent);","map":{"version":3,"sources":["DatePickerModalContent.tsx"],"names":["dateMode","anyProps","date","startDate","endDate","dates","React","setState","onInnerChange","params","onChange","prev","onInnerConfirm","mode","onConfirm","state","onToggleCollapse","setCollapsed","props","disableSafeTop","locale"],"mappings":"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","sourcesContent":["import * as React from 'react'\n\nimport Calendar, {\n  BaseCalendarProps,\n  CalendarDate,\n  CalendarDates,\n  MultiChange,\n  MultiConfirm,\n  RangeChange,\n  SingleChange,\n} from './Calendar'\n\nimport AnimatedCrossView from './AnimatedCrossView'\n\nimport DatePickerModalHeader from './DatePickerModalHeader'\nimport DatePickerModalContentHeader, {\n  HeaderPickProps,\n} from './DatePickerModalContentHeader'\nimport CalendarEdit from './CalendarEdit'\nimport DatePickerModalHeaderBackground from './DatePickerModalHeaderBackground'\n\nexport type LocalState = {\n  startDate: CalendarDate\n  endDate: CalendarDate\n  date: CalendarDate\n  dates: CalendarDates\n}\n\ninterface DatePickerModalContentBaseProps {\n  inputFormat?: string\n  locale: string\n  onDismiss: () => any\n  disableSafeTop?: boolean\n}\n\nexport interface DatePickerModalContentRangeProps\n  extends HeaderPickProps,\n    BaseCalendarProps,\n    DatePickerModalContentBaseProps {\n  mode: 'range'\n  startDate: CalendarDate\n  endDate: CalendarDate\n  onChange?: RangeChange\n  onConfirm: RangeChange\n}\n\nexport interface DatePickerModalContentSingleProps\n  extends HeaderPickProps,\n    BaseCalendarProps,\n    DatePickerModalContentBaseProps {\n  mode: 'single'\n  date?: CalendarDate\n  onChange?: SingleChange\n  onConfirm: SingleChange\n  dateMode?: 'start' | 'end'\n}\n\nexport interface DatePickerModalContentMultiProps\n  extends HeaderPickProps,\n    BaseCalendarProps,\n    DatePickerModalContentBaseProps {\n  mode: 'multiple'\n  dates?: CalendarDates\n  onChange?: MultiChange\n  onConfirm: MultiConfirm\n}\n\nexport function DatePickerModalContent(\n  props:\n    | DatePickerModalContentRangeProps\n    | DatePickerModalContentSingleProps\n    | DatePickerModalContentMultiProps\n) {\n  const {\n    mode,\n    onChange,\n    onConfirm,\n    onDismiss,\n    disableSafeTop,\n    disableWeekDays,\n    locale,\n    validRange,\n    dateMode,\n  } = props\n\n  const anyProps = props as any\n\n  // use local state to add only onConfirm state changes\n  const [state, setState] = React.useState<LocalState>({\n    date: anyProps.date,\n    startDate: anyProps.startDate,\n    endDate: anyProps.endDate,\n    dates: anyProps.dates,\n  })\n\n  // update local state if changed from outside or if modal is opened\n  React.useEffect(() => {\n    setState({\n      date: anyProps.date,\n      startDate: anyProps.startDate,\n      endDate: anyProps.endDate,\n      dates: anyProps.dates,\n    })\n  }, [anyProps.date, anyProps.startDate, anyProps.endDate, anyProps.dates])\n\n  const [collapsed, setCollapsed] = React.useState<boolean>(true)\n\n  const onInnerChange = React.useCallback(\n    (params) => {\n      onChange && onChange(params)\n      setState((prev) => ({ ...prev, ...params }))\n    },\n    [onChange, setState]\n  )\n\n  const onInnerConfirm = React.useCallback(() => {\n    if (mode === 'single') {\n      ;(onConfirm as DatePickerModalContentSingleProps['onConfirm'])({\n        date: state.date,\n      })\n    } else if (mode === 'range') {\n      ;(onConfirm as DatePickerModalContentRangeProps['onConfirm'])({\n        startDate: state.startDate,\n        endDate: state.endDate,\n      })\n    } else if (mode === 'multiple') {\n      ;(onConfirm as DatePickerModalContentMultiProps['onConfirm'])({\n        dates: state.dates || [],\n      })\n    }\n  }, [state, mode, onConfirm])\n\n  const onToggleCollapse = React.useCallback(() => {\n    setCollapsed((prev) => !prev)\n  }, [setCollapsed])\n\n  return (\n    <>\n      <DatePickerModalHeaderBackground>\n        <DatePickerModalHeader\n          locale={locale}\n          onSave={onInnerConfirm}\n          onDismiss={onDismiss}\n          saveLabel={props.saveLabel}\n          uppercase={props.uppercase ?? true}\n          disableSafeTop={disableSafeTop}\n        />\n        <DatePickerModalContentHeader\n          state={state}\n          mode={mode}\n          collapsed={collapsed}\n          onToggle={onToggleCollapse}\n          headerSeparator={props.headerSeparator}\n          emptyLabel={props.emptyLabel}\n          label={props.label}\n          moreLabel={props.moreLabel}\n          startLabel={props.startLabel}\n          endLabel={props.endLabel}\n          uppercase={props.uppercase ?? true}\n          locale={locale}\n        />\n      </DatePickerModalHeaderBackground>\n\n      <AnimatedCrossView\n        collapsed={collapsed}\n        calendar={\n          <Calendar\n            locale={locale}\n            mode={mode}\n            startDate={state.startDate}\n            endDate={state.endDate}\n            date={state.date}\n            onChange={onInnerChange}\n            disableWeekDays={disableWeekDays}\n            dates={state.dates}\n            validRange={validRange}\n            dateMode={dateMode}\n          />\n        }\n        calendarEdit={\n          <CalendarEdit\n            mode={mode}\n            state={state}\n            label={props.label}\n            startLabel={props.startLabel}\n            endLabel={props.endLabel}\n            collapsed={collapsed}\n            onChange={onInnerChange}\n            validRange={validRange}\n            locale={locale}\n          />\n        }\n      />\n    </>\n  )\n}\n\nexport default React.memo(DatePickerModalContent)\n"]},"metadata":{},"sourceType":"module"}