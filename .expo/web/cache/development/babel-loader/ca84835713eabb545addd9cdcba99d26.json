{"ast":null,"code":"import * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { daySize } from \"./dateUtils\";\n\nfunction DayRange(_ref) {\n  var leftCrop = _ref.leftCrop,\n      rightCrop = _ref.rightCrop,\n      inRange = _ref.inRange,\n      selectColor = _ref.selectColor;\n  var bothWays = inRange && leftCrop && rightCrop;\n  var isCrop = inRange && (leftCrop || rightCrop) && !(leftCrop && rightCrop);\n\n  if (inRange || isCrop) {\n    return React.createElement(View, {\n      pointerEvents: \"none\",\n      style: [StyleSheet.absoluteFill, styles.rangeRoot, bothWays && styles.rangeRootBoth, inRange && !isCrop ? {\n        backgroundColor: selectColor\n      } : null]\n    }, isCrop && React.createElement(React.Fragment, null, React.createElement(View, {\n      style: [styles.flex1, rightCrop ? {\n        backgroundColor: selectColor\n      } : null]\n    }), React.createElement(View, {\n      style: [{\n        backgroundColor: selectColor,\n        minWidth: daySize,\n        minHeight: daySize\n      }, leftCrop ? styles.leftRadius : null, rightCrop ? styles.rightRadius : null]\n    }), React.createElement(View, {\n      style: [styles.flex1, leftCrop ? {\n        backgroundColor: selectColor\n      } : null]\n    })));\n  }\n\n  return null;\n}\n\nvar styles = StyleSheet.create({\n  leftRadius: {\n    borderBottomLeftRadius: daySize / 2,\n    borderTopLeftRadius: daySize / 2\n  },\n  rightRadius: {\n    borderBottomRightRadius: daySize / 2,\n    borderTopRightRadius: daySize / 2\n  },\n  rangeRootBoth: {\n    borderRadius: daySize / 2\n  },\n  flex1: {\n    flex: 1\n  },\n  rangeRoot: {\n    flexDirection: 'row'\n  }\n});\nexport default React.memo(DayRange);","map":{"version":3,"sources":["DayRange.tsx"],"names":["selectColor","bothWays","inRange","isCrop","leftCrop","StyleSheet","styles","backgroundColor","rightCrop","minWidth","minHeight","daySize","leftRadius","borderBottomLeftRadius","borderTopLeftRadius","rightRadius","borderBottomRightRadius","borderTopRightRadius","rangeRootBoth","borderRadius","flex1","flex","rangeRoot","flexDirection","React"],"mappings":"AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;;;AAEA,SAAA,OAAA;;AAEA,SAAA,QAAA,CAAA,IAAA,EAUG;EAVe,IAAA,QAAA,GAUf,IAVe,CAAA,QAAA;EAAA,IAAA,SAAA,GAUf,IAVe,CAAA,SAAA;EAAA,IAAA,OAAA,GAUf,IAVe,CAAA,OAAA;EAAA,IAIhBA,WAJgB,GAUf,IAVe,CAIhBA,WAJgB;EAWhB,IAAMC,QAAQ,GAAGC,OAAO,IAAPA,QAAAA,IAAjB,SAAA;EACA,IAAMC,MAAM,GAAGD,OAAO,KAAKE,QAAQ,IAApBF,SAAO,CAAPA,IAAsC,EAAEE,QAAQ,IAA/D,SAAqD,CAArD;;EAEA,IAAIF,OAAO,IAAX,MAAA,EAAuB;IACrB,OACE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;MACE,aAAa,EADf,MAAA;MAEE,KAAK,EAAE,CACLG,UAAU,CADL,YAAA,EAELC,MAAM,CAFD,SAAA,EAGLL,QAAQ,IAAIK,MAAM,CAHb,aAAA,EAIL,OAAO,IAAI,CAAX,MAAA,GACI;QACEC,eAAe,EAAEP;MADnB,CADJ,GAJK,IAAA;IAFT,CAAA,EAaGG,MAAM,IACL,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EACE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;MACE,KAAK,EAAE,CACLG,MAAM,CADD,KAAA,EAELE,SAAS,GACL;QACED,eAAe,EAAEP;MADnB,CADK,GAFJ,IAAA;IADT,CAAA,CADF,EAWE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;MACE,KAAK,EAAE,CACL;QACEO,eAAe,EADjB,WAAA;QAEEE,QAAQ,EAFV,OAAA;QAGEC,SAAS,EAAEC;MAHb,CADK,EAMLP,QAAQ,GAAGE,MAAM,CAAT,UAAA,GANH,IAAA,EAOLE,SAAS,GAAGF,MAAM,CAAT,WAAA,GAPJ,IAAA;IADT,CAAA,CAXF,EAsBE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;MACE,KAAK,EAAE,CACLA,MAAM,CADD,KAAA,EAELF,QAAQ,GACJ;QACEG,eAAe,EAAEP;MADnB,CADI,GAFH,IAAA;IADT,CAAA,CAtBF,CAdJ,CADF;EAmDD;;EACD,OAAA,IAAA;AACD;;AAED,IAAMM,MAAM,GAAG,UAAU,CAAV,MAAA,CAAkB;EAC/BM,UAAU,EAAE;IACVC,sBAAsB,EAAEF,OAAO,GADrB,CAAA;IAEVG,mBAAmB,EAAEH,OAAO,GAAG;EAFrB,CADmB;EAK/BI,WAAW,EAAE;IACXC,uBAAuB,EAAEL,OAAO,GADrB,CAAA;IAEXM,oBAAoB,EAAEN,OAAO,GAAG;EAFrB,CALkB;EAS/BO,aAAa,EAAE;IACbC,YAAY,EAAER,OAAO,GAAG;EADX,CATgB;EAY/BS,KAAK,EAAE;IACLC,IAAI,EAAE;EADD,CAZwB;EAe/BC,SAAS,EAAE;IACTC,aAAa,EAAE;EADN;AAfoB,CAAlB,CAAf;AAoBA,eAAeC,KAAK,CAALA,IAAAA,CAAf,QAAeA,CAAf","sourcesContent":["import * as React from 'react'\nimport { StyleSheet, View } from 'react-native'\nimport { daySize } from './dateUtils'\n\nfunction DayRange({\n  leftCrop,\n  rightCrop,\n  inRange,\n  selectColor,\n}: {\n  leftCrop: boolean\n  rightCrop: boolean\n  inRange: boolean\n  selectColor: string\n}) {\n  const bothWays = inRange && leftCrop && rightCrop\n  const isCrop = inRange && (leftCrop || rightCrop) && !(leftCrop && rightCrop)\n\n  if (inRange || isCrop) {\n    return (\n      <View\n        pointerEvents=\"none\"\n        style={[\n          StyleSheet.absoluteFill,\n          styles.rangeRoot,\n          bothWays && styles.rangeRootBoth,\n          inRange && !isCrop\n            ? {\n                backgroundColor: selectColor,\n              }\n            : null,\n        ]}\n      >\n        {isCrop && (\n          <>\n            <View\n              style={[\n                styles.flex1,\n                rightCrop\n                  ? {\n                      backgroundColor: selectColor,\n                    }\n                  : null,\n              ]}\n            />\n            <View\n              style={[\n                {\n                  backgroundColor: selectColor,\n                  minWidth: daySize,\n                  minHeight: daySize,\n                },\n                leftCrop ? styles.leftRadius : null,\n                rightCrop ? styles.rightRadius : null,\n              ]}\n            />\n            <View\n              style={[\n                styles.flex1,\n                leftCrop\n                  ? {\n                      backgroundColor: selectColor,\n                    }\n                  : null,\n              ]}\n            />\n          </>\n        )}\n      </View>\n    )\n  }\n  return null\n}\n\nconst styles = StyleSheet.create({\n  leftRadius: {\n    borderBottomLeftRadius: daySize / 2,\n    borderTopLeftRadius: daySize / 2,\n  },\n  rightRadius: {\n    borderBottomRightRadius: daySize / 2,\n    borderTopRightRadius: daySize / 2,\n  },\n  rangeRootBoth: {\n    borderRadius: daySize / 2,\n  },\n  flex1: {\n    flex: 1,\n  },\n  rangeRoot: {\n    flexDirection: 'row',\n  },\n})\n\nexport default React.memo(DayRange)\n"]},"metadata":{},"sourceType":"module"}