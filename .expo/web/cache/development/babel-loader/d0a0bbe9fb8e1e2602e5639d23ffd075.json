{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { getIndexFromVerticalOffset, getMonthHeight, getVerticalMonthsOffset, montHeaderHeight } from \"./Month\";\nimport { beginOffset, estimatedMonthHeight, totalMonths } from \"./dateUtils\";\nimport { useLatest } from \"../utils\";\nimport { useYearChange } from \"./SwiperUtils\";\nimport AutoSizer from \"./AutoSizer\";\n\nfunction Swiper(_ref) {\n  var scrollMode = _ref.scrollMode,\n      renderItem = _ref.renderItem,\n      renderHeader = _ref.renderHeader,\n      renderFooter = _ref.renderFooter,\n      selectedYear = _ref.selectedYear,\n      initialIndex = _ref.initialIndex;\n  var isHorizontal = scrollMode === 'horizontal';\n\n  var _React$useState = React.useState(initialIndex),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      index = _React$useState2[0],\n      setIndex = _React$useState2[1];\n\n  var onPrev = React.useCallback(function () {\n    setIndex(function (prev) {\n      return prev - 1;\n    });\n  }, [setIndex]);\n  var onNext = React.useCallback(function () {\n    setIndex(function (prev) {\n      return prev + 1;\n    });\n  }, [setIndex]);\n  var renderProps = {\n    index: index,\n    onPrev: onPrev,\n    onNext: onNext\n  };\n  var indexRef = useLatest(index);\n  useYearChange(function (newIndex) {\n    if (newIndex) {\n      setIndex(newIndex);\n    }\n  }, {\n    selectedYear: selectedYear,\n    currentIndexRef: indexRef\n  });\n  return React.createElement(React.Fragment, null, renderHeader && renderHeader(renderProps), isHorizontal ? React.createElement(View, {\n    style: styles.flex1\n  }, renderItem({\n    index: index,\n    onPrev: onPrev,\n    onNext: onNext\n  })) : React.createElement(AutoSizer, null, function (_ref2) {\n    var width = _ref2.width,\n        height = _ref2.height;\n    return React.createElement(VerticalScroller, {\n      width: width,\n      height: height,\n      initialIndex: initialIndex,\n      estimatedHeight: estimatedMonthHeight,\n      renderItem: renderItem\n    });\n  }), renderFooter && renderFooter(renderProps));\n}\n\nvar visibleArray = function visibleArray(i) {\n  return [i - 2, i - 1, i, i + 1, i + 2];\n};\n\nfunction VerticalScroller(_ref3) {\n  var width = _ref3.width,\n      height = _ref3.height,\n      initialIndex = _ref3.initialIndex,\n      estimatedHeight = _ref3.estimatedHeight,\n      renderItem = _ref3.renderItem;\n  var idx = React.useRef(initialIndex);\n\n  var _React$useState3 = React.useState(visibleArray(initialIndex)),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      visibleIndexes = _React$useState4[0],\n      setVisibleIndexes = _React$useState4[1];\n\n  var parentRef = React.useRef(null);\n  useIsomorphicLayoutEffect(function () {\n    var element = parentRef.current;\n\n    if (!element) {\n      return;\n    }\n\n    var top = getVerticalMonthsOffset(idx.current) - montHeaderHeight;\n    element.scrollTo({\n      top: top\n    });\n  }, [parentRef, idx]);\n  var setVisibleIndexesThrottled = useDebouncedCallback(setVisibleIndexes);\n  var onScroll = React.useCallback(function (e) {\n    var top = e.currentTarget.scrollTop;\n\n    if (top === 0) {\n      return;\n    }\n\n    var offset = top - beginOffset;\n    var index = getIndexFromVerticalOffset(offset);\n\n    if (idx.current !== index) {\n      idx.current = index;\n      setVisibleIndexesThrottled(visibleArray(index));\n    }\n  }, [setVisibleIndexesThrottled]);\n  return React.createElement(\"div\", {\n    ref: parentRef,\n    style: {\n      height: height,\n      width: width,\n      overflow: 'auto'\n    },\n    onScroll: onScroll\n  }, React.createElement(\"div\", {\n    style: {\n      height: estimatedHeight * totalMonths,\n      position: 'relative'\n    }\n  }, [0, 1, 2, 3, 4].map(function (vi) {\n    return React.createElement(\"div\", {\n      key: vi,\n      style: {\n        willChange: 'transform',\n        transform: \"translateY(\" + getVerticalMonthsOffset(visibleIndexes[vi]) + \"px)\",\n        left: 0,\n        right: 0,\n        position: 'absolute',\n        height: getMonthHeight('vertical', visibleIndexes[vi])\n      }\n    }, renderItem({\n      index: visibleIndexes[vi],\n      onPrev: empty,\n      onNext: empty\n    }));\n  })));\n}\n\nvar empty = function empty() {\n  return null;\n};\n\nvar styles = StyleSheet.create({\n  flex1: {\n    flex: 1\n  }\n});\nexport function useDebouncedCallback(callback) {\n  var mounted = React.useRef(true);\n  var latest = useLatest(callback);\n  var timerId = React.useRef(null);\n  React.useEffect(function () {\n    return function () {\n      mounted.current = false;\n\n      if (timerId.current) {\n        window.cancelAnimationFrame(timerId.current);\n      }\n    };\n  }, [mounted, timerId]);\n  return React.useCallback(function (args) {\n    if (timerId.current) {\n      window.cancelAnimationFrame(timerId.current);\n    }\n\n    timerId.current = window.requestAnimationFrame(function () {\n      if (mounted.current) {\n        latest.current(args);\n      }\n    });\n  }, [mounted, timerId, latest]);\n}\nvar useIsomorphicLayoutEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\nexport default React.memo(Swiper);","map":{"version":3,"sources":["Swiper.tsx"],"names":["initialIndex","isHorizontal","scrollMode","React","onPrev","setIndex","prev","onNext","renderProps","index","indexRef","useLatest","useYearChange","newIndex","selectedYear","currentIndexRef","renderHeader","styles","flex1","renderItem","height","renderFooter","visibleArray","i","idx","parentRef","useIsomorphicLayoutEffect","element","top","getVerticalMonthsOffset","setVisibleIndexesThrottled","useDebouncedCallback","onScroll","e","offset","getIndexFromVerticalOffset","width","overflow","estimatedHeight","position","vi","willChange","transform","visibleIndexes","left","right","getMonthHeight","empty","flex","mounted","latest","timerId","window","args"],"mappings":";AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;;;AAGA,SAAA,0BAAA,EAAA,cAAA,EAAA,uBAAA,EAAA,gBAAA;AAOA,SAAA,WAAA,EAAA,oBAAA,EAAA,WAAA;AACA,SAAA,SAAA;AACA,SAAA,aAAA;AACA,OAAA,SAAA;;AAEA,SAAA,MAAA,CAAA,IAAA,EAOgB;EAPA,IAAA,UAAA,GAOA,IAPA,CAAA,UAAA;EAAA,IAAA,UAAA,GAOA,IAPA,CAAA,UAAA;EAAA,IAAA,YAAA,GAOA,IAPA,CAAA,YAAA;EAAA,IAAA,YAAA,GAOA,IAPA,CAAA,YAAA;EAAA,IAAA,YAAA,GAOA,IAPA,CAAA,YAAA;EAAA,IAMdA,YANc,GAOA,IAPA,CAMdA,YANc;EAQd,IAAMC,YAAY,GAAGC,UAAU,KAA/B,YAAA;;EACA,sBAA0BC,KAAK,CAALA,QAAAA,CAA1B,YAA0BA,CAA1B;EAAA;EAAA,IAAM,KAAN;EAAA,IAAM,QAAN;;EAEA,IAAMC,MAAM,GAAG,KAAK,CAAL,WAAA,CAAkB,YAAM;IACrCC,QAAQ,CAAEC,UAAAA,IAAD;MAAA,OAAUA,IAAI,GAAvBD,CAAS;IAAA,CAAD,CAARA;EADa,CAAA,EAEZ,CAFH,QAEG,CAFY,CAAf;EAIA,IAAME,MAAM,GAAG,KAAK,CAAL,WAAA,CAAkB,YAAM;IACrCF,QAAQ,CAAEC,UAAAA,IAAD;MAAA,OAAUA,IAAI,GAAvBD,CAAS;IAAA,CAAD,CAARA;EADa,CAAA,EAEZ,CAFH,QAEG,CAFY,CAAf;EAIA,IAAMG,WAAW,GAAG;IAClBC,KADkB,EAClBA,KADkB;IAElBL,MAFkB,EAElBA,MAFkB;IAGlBG,MAAAA,EAAAA;EAHkB,CAApB;EAKA,IAAMG,QAAQ,GAAGC,SAAS,CAA1B,KAA0B,CAA1B;EACAC,aAAa,CACVC,UAAAA,QAAD,EAAc;IACZ,IAAA,QAAA,EAAc;MACZR,QAAQ,CAARA,QAAQ,CAARA;IACD;EAJQ,CAAA,EAMX;IACES,YADF,EACEA,YADF;IAEEC,eAAe,EAAEL;EAFnB,CANW,CAAbE;EAYA,OACE,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EACGI,YAAY,IAAIA,YAAY,CAD/B,WAC+B,CAD/B,EAEGf,YAAY,GACX,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;IAAM,KAAK,EAAEgB,MAAM,CAACC;EAApB,CAAA,EACGC,UAAU,CAAC;IAAEV,KAAF,EAAEA,KAAF;IAASL,MAAT,EAASA,MAAT;IAAiBG,MAAAA,EAAAA;EAAjB,CAAD,CADb,CADW,GAKX,KAAA,CAAA,aAAA,CAAA,SAAA,EAAA,IAAA,EACG,UAAA,KAAA,EAAA;IAAA,IAAC,KAAD,GAAA,KAAA,CAAC,KAAD;IAAA,IAAUa,MAAV,GAAA,KAAA,CAAUA,MAAV;IAAA,OACC,KAAA,CAAA,aAAA,CAAA,gBAAA,EAAA;MACE,KAAK,EADP,KAAA;MAEE,MAAM,EAFR,MAAA;MAGE,YAAY,EAHd,YAAA;MAIE,eAAe,EAJjB,oBAAA;MAKE,UAAU,EAAED;IALd,CAAA,CADD;EARP,CAOI,CAPJ,EAmBGE,YAAY,IAAIA,YAAY,CApBjC,WAoBiC,CAnB/B,CADF;AAuBD;;AAED,IAAMC,YAAY,GAAIC,SAAhBD,YAAgBC,CAAAA,CAAD;EAAA,OAAe,CAACA,CAAC,GAAF,CAAA,EAAQA,CAAC,GAAT,CAAA,EAAA,CAAA,EAAkBA,CAAC,GAAnB,CAAA,EAAyBA,CAAC,GAA9D,CAAoC,CAAf;AAAA,CAArB;;AAEA,SAAA,gBAAA,CAAA,KAAA,EAYG;EAZuB,IAAA,KAAA,GAYvB,KAZuB,CAAA,KAAA;EAAA,IAAA,MAAA,GAYvB,KAZuB,CAAA,MAAA;EAAA,IAAA,YAAA,GAYvB,KAZuB,CAAA,YAAA;EAAA,IAAA,eAAA,GAYvB,KAZuB,CAAA,eAAA;EAAA,IAKxBJ,UALwB,GAYvB,KAZuB,CAKxBA,UALwB;EAaxB,IAAMK,GAAG,GAAGrB,KAAK,CAALA,MAAAA,CAAZ,YAAYA,CAAZ;;EACA,uBAA4CA,KAAK,CAALA,QAAAA,CAC1CmB,YAAY,CAHb,YAGa,CAD8BnB,CAA5C;EAAA;EAAA,IAAM,cAAN;EAAA,IAAM,iBAAN;;EAIA,IAAMsB,SAAS,GAAGtB,KAAK,CAALA,MAAAA,CAAlB,IAAkBA,CAAlB;EAEAuB,yBAAyB,CAAC,YAAM;IAC9B,IAAMC,OAAO,GAAGF,SAAS,CAAzB,OAAA;;IACA,IAAI,CAAJ,OAAA,EAAc;MACZ;IACD;;IACD,IAAMG,GAAG,GAAGC,uBAAuB,CAACL,GAAG,CAA3BK,OAAuB,CAAvBA,GAAZ,gBAAA;IAEAF,OAAO,CAAPA,QAAAA,CAAiB;MACfC,GAAAA,EAAAA;IADe,CAAjBD;EAPuB,CAAA,EAUtB,CAAA,SAAA,EAVHD,GAUG,CAVsB,CAAzBA;EAYA,IAAMI,0BAA0B,GAAGC,oBAAoB,CAAvD,iBAAuD,CAAvD;EAEA,IAAMC,QAAQ,GAAG,KAAK,CAAL,WAAA,CACdC,UAAAA,CAAD,EAAsB;IACpB,IAAML,GAAG,GAAGK,CAAC,CAADA,aAAAA,CAAZ,SAAA;;IACA,IAAIL,GAAG,KAAP,CAAA,EAAe;MACb;IACD;;IAED,IAAMM,MAAM,GAAGN,GAAG,GAAlB,WAAA;IACA,IAAMnB,KAAK,GAAG0B,0BAA0B,CAAxC,MAAwC,CAAxC;;IAEA,IAAIX,GAAG,CAAHA,OAAAA,KAAJ,KAAA,EAA2B;MACzBA,GAAG,CAAHA,OAAAA,GAAAA,KAAAA;MACAM,0BAA0B,CAACR,YAAY,CAAvCQ,KAAuC,CAAb,CAA1BA;IACD;EAbY,CAAA,EAef,CAfF,0BAeE,CAfe,CAAjB;EAkBA,OACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;IACE,GAAG,EADL,SAAA;IAEE,KAAK,EAAE;MACLV,MADK,EACLA,MADK;MAELgB,KAFK,EAELA,KAFK;MAGLC,QAAQ,EAAE;IAHL,CAFT;IAOE,QAAQ,EAAEL;EAPZ,CAAA,EASE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;IACE,KAAK,EAAE;MACLZ,MAAM,EAAEkB,eAAe,GADlB,WAAA;MAELC,QAAQ,EAAE;IAFL;EADT,CAAA,EAMG,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,CAAqBC,UAAAA,EAAD;IAAA,OACnB,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;MACE,GAAG,EADL,EAAA;MAEE,KAAK,EAAE;QACLC,UAAU,EADL,WAAA;QAELC,SAAS,kBAAgBb,uBAAuB,CAC9Cc,cAAc,CAHX,EAGW,CADgC,CAAvC,QAFJ;QAKLC,IAAI,EALC,CAAA;QAMLC,KAAK,EANA,CAAA;QAOLN,QAAQ,EAPH,UAAA;QAQLnB,MAAM,EAAE0B,cAAc,CAAA,UAAA,EAAaH,cAAc,CAR5C,EAQ4C,CAA3B;MARjB;IAFT,CAAA,EAcGxB,UAAU,CAAC;MACVV,KAAK,EAAEkC,cAAc,CADX,EACW,CADX;MAEVvC,MAAM,EAFI,KAAA;MAGVG,MAAM,EAAEwC;IAHE,CAAD,CAdb,CADmB;EAAA,CAApB,CANH,CATF,CADF;AAyCD;;AAED,IAAMA,KAAK,GAAG,SAARA,KAAQ;EAAA,OAAd,IAAc;AAAA,CAAd;;AAEA,IAAM9B,MAAM,GAAG,UAAU,CAAV,MAAA,CAAkB;EAC/BC,KAAK,EAAE;IACL8B,IAAI,EAAE;EADD;AADwB,CAAlB,CAAf;AAMA,OAAO,SAAA,oBAAA,CAAA,QAAA,EAAkD;EACvD,IAAMC,OAAO,GAAG9C,KAAK,CAALA,MAAAA,CAAhB,IAAgBA,CAAhB;EACA,IAAM+C,MAAM,GAAGvC,SAAS,CAAxB,QAAwB,CAAxB;EACA,IAAMwC,OAAO,GAAGhD,KAAK,CAALA,MAAAA,CAAhB,IAAgBA,CAAhB;EAEAA,KAAK,CAALA,SAAAA,CAAgB,YAAM;IACpB,OAAO,YAAM;MACX8C,OAAO,CAAPA,OAAAA,GAAAA,KAAAA;;MACA,IAAIE,OAAO,CAAX,OAAA,EAAqB;QACnBC,MAAM,CAANA,oBAAAA,CAA4BD,OAAO,CAAnCC,OAAAA;MACD;IAJH,CAAA;EADFjD,CAAAA,EAOG,CAAA,OAAA,EAPHA,OAOG,CAPHA;EASA,OAAO,KAAK,CAAL,WAAA,CACJkD,UAAAA,IAAD,EAAe;IACb,IAAIF,OAAO,CAAX,OAAA,EAAqB;MACnBC,MAAM,CAANA,oBAAAA,CAA4BD,OAAO,CAAnCC,OAAAA;IACD;;IACDD,OAAO,CAAPA,OAAAA,GAAkB,MAAM,CAAN,qBAAA,CAA6B,YAAY;MACzD,IAAIF,OAAO,CAAX,OAAA,EAAqB;QACnBC,MAAM,CAANA,OAAAA,CAAAA,IAAAA;MACD;IAHHC,CAAkB,CAAlBA;EALG,CAAA,EAWL,CAAA,OAAA,EAAA,OAAA,EAXF,MAWE,CAXK,CAAP;AAaD;AAED,IAAMzB,yBAAyB,GAC7B,OAAA,MAAA,KAAA,WAAA,GAAgCvB,KAAK,CAArC,eAAA,GAAwDA,KAAK,CAD/D,SAAA;AAGA,eAAeA,KAAK,CAALA,IAAAA,CAAf,MAAeA,CAAf","sourcesContent":["import * as React from 'react'\nimport { StyleSheet, View } from 'react-native'\n\nimport {\n  getIndexFromVerticalOffset,\n  getMonthHeight,\n  getVerticalMonthsOffset,\n  montHeaderHeight,\n} from './Month'\n\nimport { beginOffset, estimatedMonthHeight, totalMonths } from './dateUtils'\nimport { useLatest } from '../utils'\nimport { RenderProps, SwiperProps, useYearChange } from './SwiperUtils'\nimport AutoSizer from './AutoSizer'\n\nfunction Swiper({\n  scrollMode,\n  renderItem,\n  renderHeader,\n  renderFooter,\n  selectedYear,\n  initialIndex,\n}: SwiperProps) {\n  const isHorizontal = scrollMode === 'horizontal'\n  const [index, setIndex] = React.useState(initialIndex)\n\n  const onPrev = React.useCallback(() => {\n    setIndex((prev) => prev - 1)\n  }, [setIndex])\n\n  const onNext = React.useCallback(() => {\n    setIndex((prev) => prev + 1)\n  }, [setIndex])\n\n  const renderProps = {\n    index,\n    onPrev,\n    onNext,\n  }\n  const indexRef = useLatest(index)\n  useYearChange(\n    (newIndex) => {\n      if (newIndex) {\n        setIndex(newIndex)\n      }\n    },\n    {\n      selectedYear,\n      currentIndexRef: indexRef,\n    }\n  )\n\n  return (\n    <>\n      {renderHeader && renderHeader(renderProps)}\n      {isHorizontal ? (\n        <View style={styles.flex1}>\n          {renderItem({ index, onPrev, onNext })}\n        </View>\n      ) : (\n        <AutoSizer>\n          {({ width, height }) => (\n            <VerticalScroller\n              width={width}\n              height={height}\n              initialIndex={initialIndex}\n              estimatedHeight={estimatedMonthHeight}\n              renderItem={renderItem}\n            />\n          )}\n        </AutoSizer>\n      )}\n      {renderFooter && renderFooter(renderProps)}\n    </>\n  )\n}\n\nconst visibleArray = (i: number) => [i - 2, i - 1, i, i + 1, i + 2]\n\nfunction VerticalScroller({\n  width,\n  height,\n  initialIndex,\n  estimatedHeight,\n  renderItem,\n}: {\n  renderItem: (renderProps: RenderProps) => any\n  width: number\n  height: number\n  initialIndex: number\n  estimatedHeight: number\n}) {\n  const idx = React.useRef<number>(initialIndex)\n  const [visibleIndexes, setVisibleIndexes] = React.useState<number[]>(\n    visibleArray(initialIndex)\n  )\n  // eslint-disable-next-line no-undef\n  const parentRef = React.useRef<HTMLDivElement | null>(null)\n\n  useIsomorphicLayoutEffect(() => {\n    const element = parentRef.current\n    if (!element) {\n      return\n    }\n    const top = getVerticalMonthsOffset(idx.current) - montHeaderHeight\n\n    element.scrollTo({\n      top,\n    })\n  }, [parentRef, idx])\n\n  const setVisibleIndexesThrottled = useDebouncedCallback(setVisibleIndexes)\n\n  const onScroll = React.useCallback(\n    (e: React.UIEvent) => {\n      const top = e.currentTarget.scrollTop\n      if (top === 0) {\n        return\n      }\n\n      const offset = top - beginOffset\n      const index = getIndexFromVerticalOffset(offset)\n\n      if (idx.current !== index) {\n        idx.current = index\n        setVisibleIndexesThrottled(visibleArray(index))\n      }\n    },\n    [setVisibleIndexesThrottled]\n  )\n\n  return (\n    <div\n      ref={parentRef}\n      style={{\n        height,\n        width,\n        overflow: 'auto',\n      }}\n      onScroll={onScroll}\n    >\n      <div\n        style={{\n          height: estimatedHeight * totalMonths,\n          position: 'relative',\n        }}\n      >\n        {[0, 1, 2, 3, 4].map((vi) => (\n          <div\n            key={vi}\n            style={{\n              willChange: 'transform',\n              transform: `translateY(${getVerticalMonthsOffset(\n                visibleIndexes[vi]\n              )}px)`,\n              left: 0,\n              right: 0,\n              position: 'absolute',\n              height: getMonthHeight('vertical', visibleIndexes[vi]),\n              // transform: `translateY(${getMonthsOffset('vertical', vi)}px)`,\n            }}\n          >\n            {renderItem({\n              index: visibleIndexes[vi],\n              onPrev: empty,\n              onNext: empty,\n            })}\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nconst empty = () => null\n\nconst styles = StyleSheet.create({\n  flex1: {\n    flex: 1,\n  },\n})\n\nexport function useDebouncedCallback(callback: any): any {\n  const mounted = React.useRef<boolean>(true)\n  const latest = useLatest(callback)\n  const timerId = React.useRef<any>(null)\n\n  React.useEffect(() => {\n    return () => {\n      mounted.current = false\n      if (timerId.current) {\n        window.cancelAnimationFrame(timerId.current)\n      }\n    }\n  }, [mounted, timerId])\n\n  return React.useCallback(\n    (args: any) => {\n      if (timerId.current) {\n        window.cancelAnimationFrame(timerId.current)\n      }\n      timerId.current = window.requestAnimationFrame(function () {\n        if (mounted.current) {\n          latest.current(args)\n        }\n      })\n    },\n    [mounted, timerId, latest]\n  )\n}\n\nconst useIsomorphicLayoutEffect =\n  typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect\n\nexport default React.memo(Swiper)\n"]},"metadata":{},"sourceType":"module"}