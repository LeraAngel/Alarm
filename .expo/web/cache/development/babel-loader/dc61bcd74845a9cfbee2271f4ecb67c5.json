{"ast":null,"code":"import * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport DayName from \"./DayName\";\nimport { useTheme } from 'react-native-paper';\nimport { showWeekDay } from \"./dateUtils\";\nexport var dayNamesHeight = 44;\nvar weekdays = [new Date(2020, 7, 2), new Date(2020, 7, 3), new Date(2020, 7, 4), new Date(2020, 7, 5), new Date(2020, 7, 6), new Date(2020, 7, 7), new Date(2020, 7, 8)];\n\nfunction DayNames(_ref) {\n  var disableWeekDays = _ref.disableWeekDays,\n      locale = _ref.locale;\n  var theme = useTheme();\n  var shortDayNames = React.useMemo(function () {\n    var formatter = new Intl.DateTimeFormat(locale, {\n      weekday: 'narrow'\n    });\n    return weekdays.map(function (date) {\n      return formatter.format(date);\n    });\n  }, [locale]);\n  return React.createElement(View, {\n    style: [styles.dayNames, {\n      backgroundColor: theme.colors.surface\n    }],\n    pointerEvents: 'none'\n  }, shortDayNames.filter(function (_, dayIndex) {\n    return showWeekDay(dayIndex, disableWeekDays);\n  }).map(function (dayName, i) {\n    return React.createElement(DayName, {\n      key: dayName + \"_\" + i,\n      label: dayName\n    });\n  }));\n}\n\nvar styles = StyleSheet.create({\n  dayNames: {\n    height: dayNamesHeight,\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: '#fff'\n  }\n});\nexport default React.memo(DayNames);","map":{"version":3,"sources":["DayNames.tsx"],"names":["dayNamesHeight","weekdays","locale","theme","useTheme","shortDayNames","formatter","Intl","weekday","date","styles","backgroundColor","surface","showWeekDay","dayName","dayNames","height","flexDirection","alignItems","React"],"mappings":"AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;;;AAEA,OAAA,OAAA;AACA,SAAA,QAAA,QAAA,oBAAA;AACA,SAAA,WAAA;AAEA,OAAO,IAAMA,cAAc,GAApB,EAAA;AAGP,IAAMC,QAAQ,GAAG,CACf,IAAA,IAAA,CAAA,IAAA,EAAA,CAAA,EADe,CACf,CADe,EAEf,IAAA,IAAA,CAAA,IAAA,EAAA,CAAA,EAFe,CAEf,CAFe,EAGf,IAAA,IAAA,CAAA,IAAA,EAAA,CAAA,EAHe,CAGf,CAHe,EAIf,IAAA,IAAA,CAAA,IAAA,EAAA,CAAA,EAJe,CAIf,CAJe,EAKf,IAAA,IAAA,CAAA,IAAA,EAAA,CAAA,EALe,CAKf,CALe,EAMf,IAAA,IAAA,CAAA,IAAA,EAAA,CAAA,EANe,CAMf,CANe,EAOf,IAAA,IAAA,CAAA,IAAA,EAAA,CAAA,EAPF,CAOE,CAPe,CAAjB;;AAUA,SAAA,QAAA,CAAA,IAAA,EAMG;EANe,IAAA,eAAA,GAMf,IANe,CAAA,eAAA;EAAA,IAEhBC,MAFgB,GAMf,IANe,CAEhBA,MAFgB;EAOhB,IAAMC,KAAK,GAAGC,QAAd,EAAA;EACA,IAAMC,aAAa,GAAG,KAAK,CAAL,OAAA,CAAwB,YAAM;IAClD,IAAMC,SAAS,GAAG,IAAIC,IAAI,CAAR,cAAA,CAAA,MAAA,EAAgC;MAChDC,OAAO,EAAE;IADuC,CAAhC,CAAlB;IAGA,OAAOP,QAAQ,CAARA,GAAAA,CAAcQ,UAAAA,IAAD;MAAA,OAAUH,SAAS,CAATA,MAAAA,CAA9B,IAA8BA,CAAV;IAAA,CAAbL,CAAP;EAJoB,CAAA,EAKnB,CALH,MAKG,CALmB,CAAtB;EAOA,OACE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;IACE,KAAK,EAAE,CAACS,MAAM,CAAP,QAAA,EAAkB;MAAEC,eAAe,EAAER,KAAK,CAALA,MAAAA,CAAaS;IAAhC,CAAlB,CADT;IAEE,aAAa,EAAE;EAFjB,CAAA,EAIG,aAAa,CAAb,MAAA,CACS,UAAA,CAAA,EAAA,QAAA;IAAA,OAAiBC,WAAW,CAAA,QAAA,EADrC,eACqC,CAA5B;EAAA,CADT,EAAA,GAAA,CAEM,UAAA,OAAA,EAAA,CAAA;IAAA,OACH,KAAA,CAAA,aAAA,CAAA,OAAA,EAAA;MAAS,GAAG,EAAKC,OAAL,SAAZ,CAAA;MAAiC,KAAK,EAAEA;IAAxC,CAAA,CADG;EAAA,CAFN,CAJH,CADF;AAYD;;AACD,IAAMJ,MAAM,GAAG,UAAU,CAAV,MAAA,CAAkB;EAC/BK,QAAQ,EAAE;IACRC,MAAM,EADE,cAAA;IAERC,aAAa,EAFL,KAAA;IAGRC,UAAU,EAHF,QAAA;IAIRP,eAAe,EAAE;EAJT;AADqB,CAAlB,CAAf;AAQA,eAAeQ,KAAK,CAALA,IAAAA,CAAf,QAAeA,CAAf","sourcesContent":["import * as React from 'react'\nimport { StyleSheet, View } from 'react-native'\nimport DayName from './DayName'\nimport { useTheme } from 'react-native-paper'\nimport { DisableWeekDaysType, showWeekDay } from './dateUtils'\n\nexport const dayNamesHeight = 44\n\n// TODO: wait for a better Intl api ;-)\nconst weekdays = [\n  new Date(2020, 7, 2),\n  new Date(2020, 7, 3),\n  new Date(2020, 7, 4),\n  new Date(2020, 7, 5),\n  new Date(2020, 7, 6),\n  new Date(2020, 7, 7),\n  new Date(2020, 7, 8),\n]\n\nfunction DayNames({\n  disableWeekDays,\n  locale,\n}: {\n  locale: undefined | string\n  disableWeekDays?: DisableWeekDaysType\n}) {\n  const theme = useTheme()\n  const shortDayNames = React.useMemo<string[]>(() => {\n    const formatter = new Intl.DateTimeFormat(locale, {\n      weekday: 'narrow',\n    })\n    return weekdays.map((date) => formatter.format(date))\n  }, [locale])\n\n  return (\n    <View\n      style={[styles.dayNames, { backgroundColor: theme.colors.surface }]}\n      pointerEvents={'none'}\n    >\n      {shortDayNames\n        .filter((_, dayIndex) => showWeekDay(dayIndex, disableWeekDays))\n        .map((dayName, i) => (\n          <DayName key={`${dayName}_${i}`} label={dayName} />\n        ))}\n    </View>\n  )\n}\nconst styles = StyleSheet.create({\n  dayNames: {\n    height: dayNamesHeight,\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: '#fff',\n  },\n})\nexport default React.memo(DayNames)\n"]},"metadata":{},"sourceType":"module"}