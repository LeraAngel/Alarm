{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport 'intl';\nimport 'intl/locale-data/jsonp/en';\nimport * as React from 'react';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { Provider as PaperProvider, DarkTheme, Modal, withTheme } from 'react-native-paper';\nimport * as Notifications from 'expo-notifications';\nimport AlarmNotify from \"./components/AlarmNotify\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport CreationScreen from \"./screens/CreationScreen\";\nimport RadioPlayer from \"./framework/RadioPlayer\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nNotifications.setNotificationHandler({\n  handleNotification: function handleNotification() {\n    return _regeneratorRuntime.async(function handleNotification$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", {\n              shouldShowAlert: true,\n              shouldPlaySound: true,\n              shouldSetBadge: true\n            });\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n});\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this);\n    _this.state = {\n      bIsAlarmNotifyVisible: false,\n      currentRadioName: \"\"\n    };\n    Notifications.addNotificationReceivedListener(function (notification) {\n      RadioPlayer.instance.play({\n        uri: notification.request.content.data.radioUri\n      });\n      _this.state.bIsAlarmNotifyVisible = true;\n      _this.state.currentRadioName = notification.request.content.data.radioName;\n\n      _this.setState(_this.state);\n    });\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"_hideAlarmNotify\",\n    value: function _hideAlarmNotify() {\n      RadioPlayer.instance.stop();\n      this.state.bIsAlarmNotifyVisible = false;\n      this.setState(this.state);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      appTheme = DarkTheme;\n      return _jsxs(PaperProvider, {\n        theme: appTheme,\n        children: [_jsx(NavigationContainer, {\n          children: _jsxs(Stack.Navigator, {\n            initialRouteName: \"Home\",\n            screenOptions: {\n              header: function header(props) {}\n            },\n            children: [_jsx(Stack.Screen, {\n              name: \"Home\",\n              component: withTheme(HomeScreen)\n            }), _jsx(Stack.Screen, {\n              name: \"Creation\",\n              component: withTheme(CreationScreen)\n            })]\n          })\n        }), _jsx(Modal, {\n          visible: this.state.bIsAlarmNotifyVisible,\n          dismissable: false,\n          children: _jsx(AlarmNotify, {\n            theme: appTheme,\n            radioName: this.state.currentRadioName,\n            onHide: this._hideAlarmNotify.bind(this)\n          })\n        })]\n      });\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };","map":{"version":3,"names":["React","createNativeStackNavigator","NavigationContainer","Provider","PaperProvider","DarkTheme","Modal","withTheme","Notifications","AlarmNotify","HomeScreen","CreationScreen","RadioPlayer","Stack","setNotificationHandler","handleNotification","shouldShowAlert","shouldPlaySound","shouldSetBadge","App","state","bIsAlarmNotifyVisible","currentRadioName","addNotificationReceivedListener","notification","instance","play","uri","request","content","data","radioUri","radioName","setState","stop","appTheme","header","props","_hideAlarmNotify","bind","Component"],"sources":["C:/Users/lera-/StudioProjects/React/task2/App.js"],"sourcesContent":["import 'intl';\nimport 'intl/locale-data/jsonp/en';\n\nimport * as React from 'react';\n\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { NavigationContainer } from '@react-navigation/native';\n\nimport { Provider as PaperProvider, DarkTheme, Modal, withTheme } from 'react-native-paper';\n\nimport * as Notifications from 'expo-notifications';\n\nimport AlarmNotify from './components/AlarmNotify';\nimport HomeScreen from './screens/HomeScreen';\nimport CreationScreen from './screens/CreationScreen';\nimport RadioPlayer from './framework/RadioPlayer';\n\nconst Stack = createNativeStackNavigator();\n\nNotifications.setNotificationHandler({\n    handleNotification: async () => ({\n        shouldShowAlert: true,\n        shouldPlaySound: true,\n        shouldSetBadge: true,  \n    }),\n});\n\nexport default class App extends React.Component {\n\n    constructor() {\n        super();\n\n        Notifications.addNotificationReceivedListener(notification => {\n            RadioPlayer.instance.play({\n                uri: notification.request.content.data.radioUri\n            });\n\n            this.state.bIsAlarmNotifyVisible = true;\n            this.state.currentRadioName = notification.request.content.data.radioName;\n            this.setState(this.state);\n        });\n    }\n\n    state = {\n        bIsAlarmNotifyVisible: false,\n        currentRadioName: \"\",\n    }\n\n    _hideAlarmNotify() {\n        RadioPlayer.instance.stop();\n        this.state.bIsAlarmNotifyVisible = false;\n        this.setState(this.state);\n    }\n\n    render() {\n        appTheme = DarkTheme;\n        return (\n            <PaperProvider theme={appTheme}>\n                <NavigationContainer>\n                    <Stack.Navigator initialRouteName=\"Home\" screenOptions={{ header: (props) => { } }}>\n                        <Stack.Screen name=\"Home\" component={withTheme(HomeScreen)} />\n                        <Stack.Screen name=\"Creation\" component={withTheme(CreationScreen)} />\n                    </Stack.Navigator>\n                </NavigationContainer>\n                <Modal visible={this.state.bIsAlarmNotifyVisible} dismissable={false} >\n                    <AlarmNotify theme={appTheme} radioName={this.state.currentRadioName} onHide={this._hideAlarmNotify.bind(this)} />\n                </Modal>\n            </PaperProvider>\n        );\n    }\n\n}\n"],"mappings":";;;;;;;;;;;AAAA,OAAO,MAAP;AACA,OAAO,2BAAP;AAEA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,SAASC,0BAAT,QAA2C,gCAA3C;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,SAASC,QAAQ,IAAIC,aAArB,EAAoCC,SAApC,EAA+CC,KAA/C,EAAsDC,SAAtD,QAAuE,oBAAvE;AAEA,OAAO,KAAKC,aAAZ,MAA+B,oBAA/B;AAEA,OAAOC,WAAP;AACA,OAAOC,UAAP;AACA,OAAOC,cAAP;AACA,OAAOC,WAAP;;;AAEA,IAAMC,KAAK,GAAGZ,0BAA0B,EAAxC;AAEAO,aAAa,CAACM,sBAAd,CAAqC;EACjCC,kBAAkB,EAAE;IAAA;MAAA;QAAA;UAAA;YAAA,iCAAa;cAC7BC,eAAe,EAAE,IADY;cAE7BC,eAAe,EAAE,IAFY;cAG7BC,cAAc,EAAE;YAHa,CAAb;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA;AADa,CAArC;;IAQqBC,G;;;;;EAEjB,eAAc;IAAA;;IAAA;;IACV;IADU,MAcdC,KAdc,GAcN;MACJC,qBAAqB,EAAE,KADnB;MAEJC,gBAAgB,EAAE;IAFd,CAdM;IAGVd,aAAa,CAACe,+BAAd,CAA8C,UAAAC,YAAY,EAAI;MAC1DZ,WAAW,CAACa,QAAZ,CAAqBC,IAArB,CAA0B;QACtBC,GAAG,EAAEH,YAAY,CAACI,OAAb,CAAqBC,OAArB,CAA6BC,IAA7B,CAAkCC;MADjB,CAA1B;MAIA,MAAKX,KAAL,CAAWC,qBAAX,GAAmC,IAAnC;MACA,MAAKD,KAAL,CAAWE,gBAAX,GAA8BE,YAAY,CAACI,OAAb,CAAqBC,OAArB,CAA6BC,IAA7B,CAAkCE,SAAhE;;MACA,MAAKC,QAAL,CAAc,MAAKb,KAAnB;IACH,CARD;IAHU;EAYb;;;;WAOD,4BAAmB;MACfR,WAAW,CAACa,QAAZ,CAAqBS,IAArB;MACA,KAAKd,KAAL,CAAWC,qBAAX,GAAmC,KAAnC;MACA,KAAKY,QAAL,CAAc,KAAKb,KAAnB;IACH;;;WAED,kBAAS;MACLe,QAAQ,GAAG9B,SAAX;MACA,OACI,MAAC,aAAD;QAAe,KAAK,EAAE8B,QAAtB;QAAA,WACI,KAAC,mBAAD;UAAA,UACI,MAAC,KAAD,CAAO,SAAP;YAAiB,gBAAgB,EAAC,MAAlC;YAAyC,aAAa,EAAE;cAAEC,MAAM,EAAE,gBAACC,KAAD,EAAW,CAAG;YAAxB,CAAxD;YAAA,WACI,KAAC,KAAD,CAAO,MAAP;cAAc,IAAI,EAAC,MAAnB;cAA0B,SAAS,EAAE9B,SAAS,CAACG,UAAD;YAA9C,EADJ,EAEI,KAAC,KAAD,CAAO,MAAP;cAAc,IAAI,EAAC,UAAnB;cAA8B,SAAS,EAAEH,SAAS,CAACI,cAAD;YAAlD,EAFJ;UAAA;QADJ,EADJ,EAOI,KAAC,KAAD;UAAO,OAAO,EAAE,KAAKS,KAAL,CAAWC,qBAA3B;UAAkD,WAAW,EAAE,KAA/D;UAAA,UACI,KAAC,WAAD;YAAa,KAAK,EAAEc,QAApB;YAA8B,SAAS,EAAE,KAAKf,KAAL,CAAWE,gBAApD;YAAsE,MAAM,EAAE,KAAKgB,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B;UAA9E;QADJ,EAPJ;MAAA,EADJ;IAaH;;;;EA1C4BvC,KAAK,CAACwC,S;;SAAlBrB,G"},"metadata":{},"sourceType":"module"}